# use vi keybinds
set -wg mode-keys vi
# increase history size
set -g history-limit 50000
# lower escape wait time to prevent vim from lagging
set -sg escape-time 20
# allow terminal focus events
set -g focus-events on
# do not use OSC 52 to set terminal clipboard
set -g set-clipboard off
# don't alert window on activity by default, allow enabling for individual windows
set -wg monitor-activity off
set-option -g activity-action any
# keep up to 20 buffers
set -sg buffer-limit 20
# use screen for TERM for compat
set -sg default-terminal screen
# tmux shouldn't try to preserve command history; that's the shell's job
set -sg history-file ''
# if keys are entered faster than 1ms apart, assume it's a paste
set -g assume-paste-time 1
# 0-index windows
set -g base-index 0
# alert a window on bell
set -wg monitor-bell on
set -g bell-action any
# run default login shell in new window
set -g default-command ''
# destroy behavior
set -g destroy-unattached off
set -g detach-on-destroy on
# configuration for display-panes; colors and display for 1s
set -g display-panes-active-colour red
set -g display-panes-colour blue
set -g display-panes-time 1000
# display messages for 1s
set -g display-time 1000
# do not lock session at timeout
set -g lock-after-time 0
# use default prefix
set -g prefix C-b
# do not automatically renumber windows
set -g renumber-windows off
# allow more time than default for key repeats so can hold down key
set -g repeat-time 1000
# try to set xterm title
set -g set-titles on
set -g set-titles-string "#S:#I:#W - \"#T\" #{session_alerts}"
# do not monitor for silence
set -wg monitor-silence 0
set -g silence-action other
# environment to copy into shell on create and on attach
set -g update-environment[0] DISPLAY
set -g update-environment[1] KRB5CCNAME
set -g update-environment[2] SSH_ASKPASS
set -g update-environment[3] SSH_AUTH_SOCK
set -g update-environment[4] SSH_AGENT_PID
set -g update-environment[5] SSH_CONNECTION
set -g update-environment[6] WINDOWID
set -g update-environment[7] XAUTHORITY
# send bells through instead of displaying as message
set -g visual-activity off
set -g visual-bell off
set -g visual-silence off
# use only space as word separator (behave like WORDs from vim instead of words)
set -g word-separators ' '
# use default window resizing
set -wg aggressive-resize off
# clock options
set -wg clock-mode-colour blue
set -wg clock-mode-style 24
# index panes from 0
set -wg pane-base-index 0
# wrap around search
set -wg wrap-search on
# do not allow programs to change window name
set -wg allow-rename off
# support preserving alt screen
set -wg alternate-screen on
# close pane when program exits
set -wg remain-on-exit off
# default synchronize-panes to off
set -wg synchronize-panes off
# do not use mouse
set -g mouse off
# status line is turned on and single-line
set -g status on
# periodically refresh status
set -g status-interval 5
# window list at left of status
set -g status-justify left
# vi keys in status line
set -g status-keys vi
# automatic rename
set -wg automatic-rename on
set -wg automatic-rename-format "#{?pane_in_mode,[tmux],#{pane_current_command}}#{?pane_dead,[dead],}"



# options that don't work on all versions

#? check_tmux_version('>=', '3.3')
	# use neovim for editor
	set -sg editor nvim
	# do not use any xterm extended modifier keys
	set -sg extended-keys off
	set -wg copy-mode-match-style bg=cyan,fg=black
	set -wg copy-mode-current-match-style bg=magenta,fg=black
	set -wg copy-mode-mark-style bg=red,fg=black
	set -wg pane-active-border-style "#{?pane_in_mode,fg=yellow,#{?synchronize-panes,fg=red,fg=green}}"
	set -wg pane-border-lines single
	# exit tmux server if there are no sessions, but not if detached
	set -sg exit-empty on
	set -sg exit-unattached off

	# styles and formats (mostly taken from defaults)
	set -g message-command-style bg=black,fg=yellow
	set -g message-style bg=yellow,fg=black
	set -g status-left "[#{session_name}] "
	set -g status-left-length 10
	set -g status-left-style default
	set -g status-position bottom
	set -g status-right "#{?window_bigger,[#{window_offset_x}#,#{window_offset_y}] ,}\"#{=21:pane_title}\" %H:%M %d-%b-%y"
	set -g status-right-length 40
	set -g status-right-style default
	set -g status-style bg=green,fg=black
	set -wg mode-style bg=yellow,fg=black
	set -wg pane-border-format "#{?pane_active,#[reverse],}#{pane_index}#[default] \"#{pane_title}\""
	set -wg pane-border-status off
	set -wg pane-border-style default
	set -wg window-active-style default
	set -wg window-style default
	set -wg window-status-activity-style reverse
	set -wg window-status-bell-style reverse
	set -wg window-status-current-format "#I:#W#{?window_flags,#{q/e:window_flags}, }"
	set -wg window-status-current-style default
	set -wg window-status-format "#I:#W#{?window_flags,#{q/e:window_flags}, }"
	set -wg window-status-last-style default
	set -wg window-status-separator " "
	set -wg window-status-style default
#?

#? check_tmux_version('>=', '3.1c')
	# use window size from latest active client
	set -wg window-size latest
#?

# shortcuts for prefix sending to deeply nested tmux sessions
# C-b sends normal prefix to base session
# C-b C-b sends prefix to 1st nested session
# C-b C-n sends prefix to 2nd nested session
# C-b C-m sends prefix to 3rd nested session
unbind-key -T prefix C-n
bind-key -T prefix C-n send-keys C-b C-b
unbind-key -T prefix C-m
# note: this should probably be 4 Ctrl-b's, but isn't because of a weird tmux timing thing
# it's possible this behavior could change in the future
bind-key -T prefix C-m send-keys C-b C-b C-b

# Easy window switching in nested sessions
bind-key -T root M-0 if-shell '~/.userenv/scripts/check_maybe_nested_tmux.sh' 'send-keys M-0' 'select-window -t 0'
bind-key -T root M-1 if-shell '~/.userenv/scripts/check_maybe_nested_tmux.sh' 'send-keys M-1' 'select-window -t 1'
bind-key -T root M-2 if-shell '~/.userenv/scripts/check_maybe_nested_tmux.sh' 'send-keys M-2' 'select-window -t 2'
bind-key -T root M-3 if-shell '~/.userenv/scripts/check_maybe_nested_tmux.sh' 'send-keys M-3' 'select-window -t 3'
bind-key -T root M-4 if-shell '~/.userenv/scripts/check_maybe_nested_tmux.sh' 'send-keys M-4' 'select-window -t 4'
bind-key -T root M-5 if-shell '~/.userenv/scripts/check_maybe_nested_tmux.sh' 'send-keys M-5' 'select-window -t 5'
bind-key -T root M-6 if-shell '~/.userenv/scripts/check_maybe_nested_tmux.sh' 'send-keys M-6' 'select-window -t 6'
bind-key -T root M-7 if-shell '~/.userenv/scripts/check_maybe_nested_tmux.sh' 'send-keys M-7' 'select-window -t 7'
bind-key -T root M-8 if-shell '~/.userenv/scripts/check_maybe_nested_tmux.sh' 'send-keys M-8' 'select-window -t 8'
bind-key -T root M-9 if-shell '~/.userenv/scripts/check_maybe_nested_tmux.sh' 'send-keys M-9' 'select-window -t 9'

# Arrow keys to switch nested panes
bind-key -T root M-Left if-shell '~/.userenv/scripts/check_maybe_nested_tmux.sh' 'send-keys M-Left' 'select-pane -L'
bind-key -T root M-Right if-shell '~/.userenv/scripts/check_maybe_nested_tmux.sh' 'send-keys M-Right' 'select-pane -R'
bind-key -T root M-Up if-shell '~/.userenv/scripts/check_maybe_nested_tmux.sh' 'send-keys M-Up' 'select-pane -U'
bind-key -T root M-Down if-shell '~/.userenv/scripts/check_maybe_nested_tmux.sh' 'send-keys M-Down' 'select-pane -D'

# Easy pane switching in nested sessions
bind-key -T root M-p if-shell '~/.userenv/scripts/check_maybe_nested_tmux.sh' 'send-keys M-p' 'select-pane -t 0'
bind-key -T root M-q if-shell '~/.userenv/scripts/check_maybe_nested_tmux.sh' 'send-keys M-q' 'select-pane -t 1'
bind-key -T root M-w if-shell '~/.userenv/scripts/check_maybe_nested_tmux.sh' 'send-keys M-w' 'select-pane -t 2'
bind-key -T root M-e if-shell '~/.userenv/scripts/check_maybe_nested_tmux.sh' 'send-keys M-e' 'select-pane -t 3'
bind-key -T root M-r if-shell '~/.userenv/scripts/check_maybe_nested_tmux.sh' 'send-keys M-r' 'select-pane -t 4'
bind-key -T root M-t if-shell '~/.userenv/scripts/check_maybe_nested_tmux.sh' 'send-keys M-t' 'select-pane -t 5'
bind-key -T root M-y if-shell '~/.userenv/scripts/check_maybe_nested_tmux.sh' 'send-keys M-y' 'select-pane -t 6'
bind-key -T root M-u if-shell '~/.userenv/scripts/check_maybe_nested_tmux.sh' 'send-keys M-u' 'select-pane -t 7'
bind-key -T root M-i if-shell '~/.userenv/scripts/check_maybe_nested_tmux.sh' 'send-keys M-i' 'select-pane -t 8'
bind-key -T root M-o if-shell '~/.userenv/scripts/check_maybe_nested_tmux.sh' 'send-keys M-o' 'select-pane -t 9'


# Load custom cheet sheet for help shortcut
load-buffer -b cheatsheet ~/.userenv/cheat-sheet.txt
unbind-key -T prefix ?
bind-key -T prefix ? show-buffer -b cheatsheet

# Set up copy binds and hooks
# this will likely be a better way to do it, but is currently only supported in bleeding versions of tmux
#set-option -g copy-command '~/.userenv/clipboard/tmuxcopypush.sh'
unbind-key -T copy-mode-vi v
bind-key -T copy-mode-vi v send-keys -X begin-selection
unbind-key -T copy-mode-vi y
bind-key -T copy-mode-vi y send-keys -X copy-selection-and-cancel \; run-shell -b ~/.userenv/clipboard/tmuxcopypush.sh
unbind-key -T copy-mode-vi Escape
bind-key -T copy-mode-vi Escape send-keys -X cancel
unbind-key -T copy-mode-vi Enter
bind-key -T copy-mode-vi Enter send-keys -X copy-selection-and-cancel \; run-shell -b ~/.userenv/clipboard/tmuxcopypush.sh
unbind-key -T copy-mode-vi A
bind-key -T copy-mode-vi A send-keys -X append-selection-and-cancel \; run-shell -b ~/.userenv/clipboard/tmuxcopypush.sh
unbind-key -T copy-mode-vi D
bind-key -T copy-mode-vi D send-keys -X copy-end-of-line \; run-shell -b ~/.userenv/clipboard/tmuxcopypush.sh
unbind-key -T copy-mode C-w
bind-key -T copy-mode C-w send-keys -X copy-selection-and-cancel \; run-shell -b ~/.userenv/clipboard/tmuxcopypush.sh

# start clipboard sync daemon
set-hook -g session-created[0] 'run-shell -b ~/.userenv/clipboard/start_clipsyncd.sh'


# TPM Plugins

set -g @plugin 'tmux-plugins/tpm'

set -g @plugin 'crispy1989/tmux-copy-toolkit'
set -g @copytk-copy-command '~/.userenv/clipboard/pushclip.sh'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'

